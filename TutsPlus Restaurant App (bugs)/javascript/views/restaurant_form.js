// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Gourmet.Views.RestaurantForm = (function(superClass) {
    extend(RestaurantForm, superClass);

    function RestaurantForm() {
      return RestaurantForm.__super__.constructor.apply(this, arguments);
    }

    RestaurantForm.prototype.events = {
      'click #save': 'save'
    };

    RestaurantForm.prototype.save = function() {
      var data, errors, new_restaurant;
      data = this.parseFormData(this.$el.serializeArray());
      new_restaurant = new Restaurant(data);
      errors = new_restaurant.validate(new_restaurant.attributes);
      if (errors) {
        return this.handleErrors(errors);
      } else {
        return this.collection.add(new _restaurant);
      }
    };

    RestaurantForm.prototype.parseFormData = function(serialized_array) {
      return _.reduce(serialized_array, this.parseFormField, {});
    };

    RestaurantForm.prototype.parseFormField = function(collector, field_obj) {
      var name;
      name = field_obj.name.match(/\[(\w+)\]/)[1];
      collector[name] = field_obj.value;
      return collector;
    };

    RestaurantForm.prototype.handleErrors = function(errors) {
      var i, key, len, ref, results;
      $('.control-group').removeClass('error');
      ref = _.keys(errors);
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        key = ref[i];
        results.push((function(key) {
          var input;
          input = $("#restaurant_" + key);
          return input.closest('.control-gropu').addClass('error');
        })(key));
      }
      return results;
    };

    return RestaurantForm;

  })(Backbone.View);

}).call(this);
